[1mdiff --git a/app/Http/Controllers/Controller.php b/app/Http/Controllers/Controller.php[m
[1mindex 6e0f2f9..f268903 100644[m
[1m--- a/app/Http/Controllers/Controller.php[m
[1m+++ b/app/Http/Controllers/Controller.php[m
[36m@@ -13,9 +13,13 @@[m [mclass Controller extends BaseController[m
     [m
     public function counts($user) {[m
         $count_microposts = $user->microposts()->count();[m
[32m+[m[32m        $count_followings = $user->followings()->count();[m
[32m+[m[32m        $count_followers = $user->followers()->count();[m
 [m
         return [[m
             'count_microposts' => $count_microposts,[m
[32m+[m[32m            'count_followings' => $count_followings,[m
[32m+[m[32m            'count_followers' => $count_followers[m
         ];[m
     }[m
 }[m
[1mdiff --git a/app/Http/Controllers/UsersController.php b/app/Http/Controllers/UsersController.php[m
[1mindex d883b62..87ba479 100644[m
[1m--- a/app/Http/Controllers/UsersController.php[m
[1m+++ b/app/Http/Controllers/UsersController.php[m
[36m@@ -4,7 +4,8 @@[m [mnamespace App\Http\Controllers;[m
 [m
 use Illuminate\Http\Request;[m
 [m
[31m-use App\User; // 追加[m
[32m+[m[32muse App\User;[m
[32m+[m[32muse App\Micropost; // 追加[m
 [m
 class UsersController extends Controller[m
 {[m
[36m@@ -35,4 +36,34 @@[m [mclass UsersController extends Controller[m
             'user' => $user,[m
         ]);[m
     }[m
[32m+[m[41m    [m
[32m+[m[32m    public function followings($id)[m
[32m+[m[32m    {[m
[32m+[m[32m        $user = User::find($id);[m
[32m+[m[32m        $followings = $user->followings()->paginate(10);[m
[32m+[m
[32m+[m[32m        $data = [[m
[32m+[m[32m            'user' => $user,[m
[32m+[m[32m            'users' => $followings,[m
[32m+[m[32m        ];[m
[32m+[m
[32m+[m[32m        $data += $this->counts($user);[m
[32m+[m
[32m+[m[32m        return view('users.followings', $data);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function followers($id)[m
[32m+[m[32m    {[m
[32m+[m[32m        $user = User::find($id);[m
[32m+[m[32m        $followers = $user->followers()->paginate(10);[m
[32m+[m
[32m+[m[32m        $data = [[m
[32m+[m[32m            'user' => $user,[m
[32m+[m[32m            'users' => $followers,[m
[32m+[m[32m        ];[m
[32m+[m
[32m+[m[32m        $data += $this->counts($user);[m
[32m+[m
[32m+[m[32m        return view('users.followers', $data);[m
[32m+[m[32m    }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/app/User.php b/app/User.php[m
[1mindex 2263607..72b6966 100644[m
[1m--- a/app/User.php[m
[1m+++ b/app/User.php[m
[36m@@ -31,4 +31,50 @@[m [mclass User extends Authenticatable[m
     {[m
         return $this->hasMany(Micropost::class);[m
     }[m
[32m+[m[41m    [m
[32m+[m[32m    public function followings()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->belongsToMany(User::class, 'user_follow', 'user_id', 'follow_id')->withTimestamps();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function followers()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->belongsToMany(User::class, 'user_follow', 'follow_id', 'user_id')->withTimestamps();[m
[32m+[m[32m    }[m
[32m+[m[32m    public function follow($userId)[m
[32m+[m[32m    {[m
[32m+[m[32m        // 既にフォローしているかの確認[m
[32m+[m[32m        $exist = $this->is_following($userId);[m
[32m+[m[32m        // 自分自身ではないかの確認[m
[32m+[m[32m        $its_me = $this->id == $userId;[m
[32m+[m[41m        [m
[32m+[m[32m        if ($exist || $its_me) {[m
[32m+[m[32m            // 既にフォローしていれば何もしない[m
[32m+[m[32m            return false;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            // 未フォローであればフォローする[m
[32m+[m[32m            $this->followings()->attach($userId);[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    public function unfollow($userId)[m
[32m+[m[32m    {[m
[32m+[m[32m        // 既にフォローしているかの確認[m
[32m+[m[32m        $exist = $this->is_following($userId);[m
[32m+[m[32m        // 自分自身ではないかの確認[m
[32m+[m[32m        $its_me = $this->id == $userId;[m
[32m+[m[41m    [m
[32m+[m[32m        if ($exist && !$its_me) {[m
[32m+[m[32m            // 既にフォローしていればフォローを外す[m
[32m+[m[32m            $this->followings()->detach($userId);[m
[32m+[m[32m            return true;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            // 未フォローであれば何もしない[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function is_following($userId) {[m
[32m+[m[32m        return $this->followings()->where('follow_id', $userId)->exists();[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/composer.lock b/composer.lock[m
[1mindex 83fd6cd..a8e620c 100644[m
[1m--- a/composer.lock[m
[1m+++ b/composer.lock[m
[36m@@ -979,16 +979,16 @@[m
         },[m
         {[m
             "name": "paragonie/random_compat",[m
[31m-            "version": "v2.0.12",[m
[32m+[m[32m            "version": "v2.0.14",[m
             "source": {[m
                 "type": "git",[m
                 "url": "https://github.com/paragonie/random_compat.git",[m
[31m-                "reference": "258c89a6b97de7dfaf5b8c7607d0478e236b04fb"[m
[32m+[m[32m                "reference": "f6ce7dd93628088e1017fb5dd73b0b9fec7df9e5"[m
             },[m
             "dist": {[m
                 "type": "zip",[m
[31m-                "url": "https://api.github.com/repos/paragonie/random_compat/zipball/258c89a6b97de7dfaf5b8c7607d0478e236b04fb",[m
[31m-                "reference": "258c89a6b97de7dfaf5b8c7607d0478e236b04fb",[m
[32m+[m[32m                "url": "https://api.github.com/repos/paragonie/random_compat/zipball/f6ce7dd93628088e1017fb5dd73b0b9fec7df9e5",[m
[32m+[m[32m                "reference": "f6ce7dd93628088e1017fb5dd73b0b9fec7df9e5",[m
                 "shasum": ""[m
             },[m
             "require": {[m
[36m@@ -1020,10 +1020,11 @@[m
             "description": "PHP 5.x polyfill for random_bytes() and random_int() from PHP 7",[m
             "keywords": [[m
                 "csprng",[m
[32m+[m[32m                "polyfill",[m
                 "pseudorandom",[m
                 "random"[m
             ],[m
[31m-            "time": "2018-04-04T21:24:14+00:00"[m
[32m+[m[32m            "time": "2018-06-06T17:40:22+00:00"[m
         },[m
         {[m
             "name": "psr/container",[m
[1mdiff --git a/resources/views/users/show.blade.php b/resources/views/users/show.blade.php[m
[1mindex 776daf9..564fbe5 100644[m
[1m--- a/resources/views/users/show.blade.php[m
[1m+++ b/resources/views/users/show.blade.php[m
[36m@@ -11,12 +11,13 @@[m
                 <img class="media-object img-rounded img-responsive" src="{{ Gravatar::src($user->email, 500) }}" alt="">[m
                 </div>[m
             </div>[m
[32m+[m[32m            @include('user_follow.follow_button', ['user' => $user])[m
         </aside>[m
         <div class="col-xs-8">[m
             <ul class="nav nav-tabs nav-justified">[m
                 <li role="presentation" class="{{ Request::is('users/' . $user->id) ? 'active' : '' }}"><a href="{{ route('users.show', ['id' => $user->id]) }}">TimeLine <span class="badge">{{ $count_microposts }}</span></a></li>[m
[31m-                <li><a href="#">Followings</a></li>[m
[31m-                <li><a href="#">Followers</a></li>[m
[32m+[m[32m                <li role="presentation" class="{{ Request::is('users/*/followings') ? 'active' : '' }}"><a href="{{ route('users.followings', ['id' => $user->id]) }}">Followings <span class="badge">{{ $count_followings }}</span></a></li>[m
[32m+[m[32m                <li role="presentation" class="{{ Request::is('users/*/followers') ? 'active' : '' }}"><a href="{{ route('users.followers', ['id' => $user->id]) }}">Followers <span class="badge">{{ $count_followers }}</span></a></li>[m
             </ul>[m
             @if (Auth::user()->id == $user->id)[m
                   {!! Form::open(['route' => 'microposts.store']) !!}[m
[1mdiff --git a/routes/web.php b/routes/web.php[m
[1mindex 90bb5c7..a6b199b 100644[m
[1m--- a/routes/web.php[m
[1m+++ b/routes/web.php[m
[36m@@ -26,5 +26,11 @@[m [mRoute::get('logout', 'Auth\LoginController@logout')->name('logout.get');[m
 [m
 Route::group(['middleware' => ['auth']], function () {[m
     Route::resource('users', 'UsersController', ['only' => ['index', 'show']]);[m
[32m+[m[32m    Route::group(['prefix' => 'users/{id}'], function () {[m
[32m+[m[32m        Route::post('follow', 'UserFollowController@store')->name('user.follow');[m
[32m+[m[32m        Route::delete('unfollow', 'UserFollowController@destroy')->name('user.unfollow');[m
[32m+[m[32m        Route::get('followings', 'UsersController@followings')->name('users.followings');[m
[32m+[m[32m        Route::get('followers', 'UsersController@followers')->name('users.followers');[m
[32m+[m[32m    });[m
     Route::resource('microposts', 'MicropostsController', ['only' => ['store', 'destroy']]);[m
 }); [m
\ No newline at end of file[m
